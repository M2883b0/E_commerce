// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.28.3
// source: operate/ai.proto

package operate

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ChatAIRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=User_id,json=UserId,proto3" json:"User_id,omitempty"`
	Query         string                 `protobuf:"bytes,2,opt,name=Query,proto3" json:"Query,omitempty"` //用户输入的请求
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatAIRequest) Reset() {
	*x = ChatAIRequest{}
	mi := &file_operate_ai_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatAIRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatAIRequest) ProtoMessage() {}

func (x *ChatAIRequest) ProtoReflect() protoreflect.Message {
	mi := &file_operate_ai_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatAIRequest.ProtoReflect.Descriptor instead.
func (*ChatAIRequest) Descriptor() ([]byte, []int) {
	return file_operate_ai_proto_rawDescGZIP(), []int{0}
}

func (x *ChatAIRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ChatAIRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type ChatAIReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Reply         string                 `protobuf:"bytes,1,opt,name=Reply,proto3" json:"Reply,omitempty"` //AI的回复
	Code          int32                  `protobuf:"varint,2,opt,name=Code,proto3" json:"Code,omitempty"`
	Msg           string                 `protobuf:"bytes,3,opt,name=Msg,proto3" json:"Msg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatAIReply) Reset() {
	*x = ChatAIReply{}
	mi := &file_operate_ai_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatAIReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatAIReply) ProtoMessage() {}

func (x *ChatAIReply) ProtoReflect() protoreflect.Message {
	mi := &file_operate_ai_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatAIReply.ProtoReflect.Descriptor instead.
func (*ChatAIReply) Descriptor() ([]byte, []int) {
	return file_operate_ai_proto_rawDescGZIP(), []int{1}
}

func (x *ChatAIReply) GetReply() string {
	if x != nil {
		return x.Reply
	}
	return ""
}

func (x *ChatAIReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ChatAIReply) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

var File_operate_ai_proto protoreflect.FileDescriptor

var file_operate_ai_proto_rawDesc = string([]byte{
	0x0a, 0x10, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x2f, 0x61, 0x69, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0b, 0x61, 0x70, 0x69, 0x2e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x22,
	0x3e, 0x0a, 0x0d, 0x43, 0x68, 0x61, 0x74, 0x41, 0x49, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x17, 0x0a, 0x07, 0x55, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x51, 0x75, 0x65, 0x72, 0x79, 0x22,
	0x49, 0x0a, 0x0b, 0x43, 0x68, 0x61, 0x74, 0x41, 0x49, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4d, 0x73, 0x67, 0x32, 0x44, 0x0a, 0x02, 0x41, 0x49,
	0x12, 0x3e, 0x0a, 0x06, 0x43, 0x68, 0x61, 0x74, 0x41, 0x49, 0x12, 0x1a, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x41, 0x49, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x41, 0x49, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x42, 0x2e, 0x0a, 0x0b, 0x61, 0x70, 0x69, 0x2e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x50,
	0x01, 0x5a, 0x1d, 0x61, 0x69, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x3b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_operate_ai_proto_rawDescOnce sync.Once
	file_operate_ai_proto_rawDescData []byte
)

func file_operate_ai_proto_rawDescGZIP() []byte {
	file_operate_ai_proto_rawDescOnce.Do(func() {
		file_operate_ai_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_operate_ai_proto_rawDesc), len(file_operate_ai_proto_rawDesc)))
	})
	return file_operate_ai_proto_rawDescData
}

var file_operate_ai_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_operate_ai_proto_goTypes = []any{
	(*ChatAIRequest)(nil), // 0: api.operate.ChatAIRequest
	(*ChatAIReply)(nil),   // 1: api.operate.ChatAIReply
}
var file_operate_ai_proto_depIdxs = []int32{
	0, // 0: api.operate.AI.ChatAI:input_type -> api.operate.ChatAIRequest
	1, // 1: api.operate.AI.ChatAI:output_type -> api.operate.ChatAIReply
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_operate_ai_proto_init() }
func file_operate_ai_proto_init() {
	if File_operate_ai_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_operate_ai_proto_rawDesc), len(file_operate_ai_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_operate_ai_proto_goTypes,
		DependencyIndexes: file_operate_ai_proto_depIdxs,
		MessageInfos:      file_operate_ai_proto_msgTypes,
	}.Build()
	File_operate_ai_proto = out.File
	file_operate_ai_proto_goTypes = nil
	file_operate_ai_proto_depIdxs = nil
}
